@model bearhug.InteractionsServiceReference.Transaction
@{
    ViewBag.Title = "Interaction";
}
<link href="~/Content/select2/select2.css" rel="stylesheet" />

<div class="list-container">
    <div class="row list-section-subject-header-anchor"></div>
    <div class="row list-section-subject-header">
        <div class="small-9 columns">
            <h4 class="subheader">@Model.Subject</h4>
        </div>
        <div class="small-2 columns">            
            <button class="button tiny radius right reply-opened-transaction">Add Correspondence</button>
        </div>
        <div class="small-1 columns">
            <a class="right" href="@Url.Action("Patient", "Portal")"><i data-tooltip="" aria-haspopup="true" title="Close" class="fi-x has-tip tip-left"></i></a>
        </div>
    </div>
    <div class="list-container-scroller">
        @using (Html.BeginForm("Reply", "Portal", FormMethod.Post, new { @id = "reply-message-form", @class = "form-horizontal", @enctype = "multipart/form-data" }))
        {            
            <div class="reply-message-container list-section">
                <div class="row">
                    <div class="small-9 columns small-centered">
                        <fieldset>
                            <legend>Add Correspondence</legend>
                            <input id="reply_hidden_tid" name="reply_hidden_tid" type="hidden" value="@Model.TransactionId">
                            <div class="row">
                                <div class="small-2 columns">
                                    <label class="right inline" for="reply_transaction_to_emails">To</label>
                                </div>
                                <div class="small-7 columns end">
                                    @{
                            Dictionary<string, string> currentSenders = new Dictionary<string, string>();
                            foreach (bearhug.InteractionsServiceReference.TransactionComment cmt in Model.Comments)
                            {
                                if (!currentSenders.ContainsKey(cmt.From))
                                {
                                    if (Model.Members.Any(member => member.Name == cmt.From))
                                    {
                                        bearhug.InteractionsServiceReference.TransactionMember member = Model.Members.Find(mem => mem.Name == cmt.From);
                                        currentSenders.Add(member.UserId, member.Name);
                                    }
                                    if (Model.NonMembers.Any(nonmember => nonmember.Name == cmt.From))
                                    {
                                        bearhug.InteractionsServiceReference.TransactionNonMember nonmember = Model.NonMembers.Find(nonmem => nonmem.Name == cmt.From);
                                        currentSenders.Add(nonmember.UserId, nonmember.Name);
                                    }
                                }
                                foreach (string to in cmt.SentTo)
                                {
                                    if (!currentSenders.ContainsKey(to))
                                    {
                                        if (Model.Members.Any(member => member.Name == to))
                                        {
                                            bearhug.InteractionsServiceReference.TransactionMember member = Model.Members.Find(mem => mem.Name == to);
                                            currentSenders.Add(member.UserId, member.Name);
                                        }
                                        if (Model.NonMembers.Any(nonmember => nonmember.Name == to))
                                        {
                                            bearhug.InteractionsServiceReference.TransactionNonMember nonmember = Model.NonMembers.Find(nonmem => nonmem.Name == to);
                                            currentSenders.Add(nonmember.UserId, nonmember.Name);
                                        }
                                    }
                                }
                            }
                                    }
                                    <select multiple="multiple" name="reply_transaction_to_emails" id="reply_transaction_to_emails" tabindex="-1" style="width: 100%;">
                                        <option value="@Model.UserId" selected="selected" data-locked="true">@Model.UserIdName</option>
                                        @foreach (KeyValuePair<string, string> entry in currentSenders)
                                        {
                                            <option value="@entry.Key">@entry.Value</option>
                                        }
                                    </select>
                                </div>
                            </div>
                            <div class="row">
                                <div class="small-2 columns">
                                    <label class="right inline" for="reply_transaction_subject">Subject</label>
                                </div>
                                <div class="small-7 columns end">
                                    <input id="reply_transaction_subject" name="reply_transaction_subject" type="text" value="@Model.Subject" readonly="readonly" />
                                </div>
                            </div>
                            <div class="row">
                                <div class="small-2 columns">
                                    <label class="right inline" for="reply_message_file">Files (optional)</label>
                                </div>
                                <div class="small-7 columns end">
                                    <div class="row collapse">
                                        <div class="small-10 columns">
                                            <input id="new_message_files_text" name="new_message_files_text" placeholder="(optional)" disabled="disabled" type="text" />
                                        </div>
                                        <div class="small-2 columns">
                                            <div class="fileUpload button radius postfix">
                                                <span>Upload</span>
                                                <input id="new_message_files" name="new_message_files" type="file" multiple="multiple" />
                                            </div>
                                        </div>
                                    </div>
                                </div>                                
                            </div>
                            <div class="row">
                                <div class="small-2 columns">
                                    <label class="right inline" for="reply_transaction_body">Body</label>
                                </div>
                                <div class="small-7 columns end">
                                    <textarea id="reply_transaction_body" name="reply_transaction_body"></textarea>
                                </div>
                            </div>
                            <div class="row">
                                <div class="small-2 columns">
                                    &nbsp;
                                </div>
                                <div class="small-1 columns">
                                    <button id="close-reply-message" class="button tiny radius secondary" type="button">Cancel</button>
                                </div>
                                <div class="small-6 columns end">
                                    <button class="button tiny radius right" type="submit">Send</button>
                                    <input id="isForward" name="isForward" type="hidden" value="false" />
                                    <input id="forward_comment_id" name="forward_comment_id" type="hidden" value="" />
                                </div>
                            </div>
                        </fieldset>
                    </div>
                </div>
            </div>        
        }
        @foreach (bearhug.InteractionsServiceReference.TransactionComment cmt in Model.Comments)
        {
            <div class="list-section">
                <div class="row snippet">
                    <div class="small-3 columns">
                        <label>@cmt.From</label>
                    </div>
                    <div class="small-5 columns">
                        <label class="subtext">@cmt.Comment</label>
                    </div>
                    <div class="small-3 columns">
                        <label class="subtext right">@(cmt.DateTimeStamp.Date == DateTime.Today.Date ? cmt.DateTimeStamp.ToShortTimeString() : cmt.DateTimeStamp.ToShortDateString())</label>
                    </div>
                    <div class="small-1 columns">
                        @if (cmt.Documents.Count > 0 || cmt.SignedDocuments.Count > 0)
                        {
                            <img src="~/Images/paperclip.png" alt="Attachment" height="20" width="20" class="right" />
                        }
                        else
                        {
                            <span>&nbsp;</span>
                        }
                    </div>
                </div>
                <div class="row full">
                    <div class="small-12 columns">
                        <div class="row">
                            <div class="small-8 columns full-header">
                                <label>From: @cmt.From</label>
                                <label>To: @String.Join(", ", cmt.SentTo)</label>
                            </div>                            
                        </div>
                        <div class="row">
                            <div class="small-12 columns">
                                <br />
                            </div>
                        </div>
                        <div class="row msg-body">
                            <div class="small-12 columns">
                                @if (cmt.Comment.Length == 0)
                                {
                                    <label class="msg-text"><i>No message provided</i></label>
                                }
                                else
                                {
                                    <label class="msg-body-text">@MvcHtmlString.Create(Html.Encode(cmt.Comment).Replace(Environment.NewLine, "<br />"))</label>
                                }
                            </div>
                        </div>
                        <div class="row">
                            <div class="small-12 columns">
                                <hr />
                            </div>
                        </div>
                        <div class="row list-actions">
                            <div class="small-2 columns">
                                &nbsp;
                            </div>
                            <div class="small-10 columns">
                                @if (cmt.Documents.Count > 0)
                                {
                                    foreach (bearhug.InteractionsServiceReference.TransactionDocument trnsDoc in cmt.Documents)
                                    {
                                    <a href="@Url.Action("getDocument", "Transactions", new { @tid = Model.TransactionId, @cid = cmt.Id, @docid = trnsDoc.Id })" class="right" target="_blank">
                                        <label class="download-label">@trnsDoc.DocumentName</label></a>
                                    }
                                }
                            </div>
                        </div>
                        @if (cmt.SignedDocuments.Count > 0)
                        {
                            <div class="row">
                                <div class="small-12 columns">
                                    <hr />
                                </div>
                            </div>
                            <div class="row list-actions">
                                <div class="small-12 columns">
                                    <h5>Documents requiring a signature:</h5>
                                    @foreach (bearhug.InteractionsServiceReference.TransactionSignedDocument signTrnsDoc in cmt.SignedDocuments)
                                    {
                                        <span><a href="@signTrnsDoc.Url" target="_blank">Sign Document</a></span><br />
                                    }
                                </div>
                            </div>                            
                        }
                    </div>
                </div>
            </div>
        }
    </div>
</div>

<script src="~/Scripts/select2/select2.js" type="text/javascript"></script>
<script type="text/javascript">
    $(function () {

        $('.top-bar-section ul li').removeClass('active');
        $('#li-interactions').addClass('active');

        $("#reply_transaction_to_emails").select2();

        document.getElementById("new_message_files").onchange = function () {
            if (this.files.length > 1) {
                document.getElementById("new_message_files_text").value = this.files.length + " files";
            }
            if (this.files.length == 1) {
                document.getElementById("new_message_files_text").value = this.files[0].name;
            }
            if (this.files.length == 0) {
                document.getElementById("new_message_files_text").value = "";
            }
        };        

        $('.reply-opened-transaction').click(function (e) {
            e.preventDefault();
            if ($(this).parent().is('li')) {
                Foundation.libs.dropdown.close($(this).parents().eq(1));
            }            
            $('.reply-message-container').slideDown('slow', function (e) {
                $('.dropdown').hide();
            });
        });        

        $('#close-reply-message').click(function (e) {
            e.preventDefault();
            $('.reply-message-container').slideUp('slow', function () {
                $('.dropdown').show();
                $('#reply-message-form legend').text('Add Correspondance');
                $('#forwarded-files-message').hide();
                $('#reply-message-form')[0].reset();
                var data = [];
                $("#reply_transaction_to_emails option").each(function (i, opt) {
                    if ($(this).data('locked')) {
                        data.push({
                            id: $(this).val(),
                            text: $(this).text(),
                            locked: true
                        });
                    }
                });
                $("#reply_transaction_to_emails").select2("data", data);
                $('#isForward').val('false');
                $('#forward_comment_id').val('');
            });
        });        

        $('.snippet').click(listSectionClick);
        $('.full-header').click(listSectionClick);

        function listSectionClick(e) {
            if ($(this).hasClass('full-header')) {
                $(this).parents().eq(3).find('.snippet').toggle();
                $(this).parents().eq(2).toggle();
            }
            else {
                $(this).parent().find('.snippet').toggle();
                $(this).parent().find('.full').toggle();
            }
        }

        var $bodyWrapper = $('.body-wrapper'),
            $listSectionHeader = $('.list-section-subject-header'),
            $listSectionHeaderAnchor = $('.list-section-subject-header-anchor');

        $bodyWrapper.scroll(function () {
            var window_top = $bodyWrapper.scrollTop();
            var div_top = $listSectionHeaderAnchor.offset().top;
            var header_width = $listSectionHeader.width();
            if (window_top > div_top) {
                // Make the div sticky.
                $listSectionHeader.addClass('sticky');
                $listSectionHeader.width(header_width);
                $listSectionHeaderAnchor.height($listSectionHeader.height());
            }
            else {
                // Unstick the div.
                $listSectionHeader.removeClass('sticky');
                $listSectionHeaderAnchor.height(0);
            }
        });
    });
</script>

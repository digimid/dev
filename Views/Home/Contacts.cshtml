@model bearhug.Models.OrganizationConstruct
@{
    ViewBag.Title = "Contacts";
}
<link href="~/Content/select2/select2.css" rel="stylesheet" />
<h4 class="subheader">@Model.Profile.FirstName @Model.Profile.LastName's Dashboard 
    @if (Model.HasNewFax)
    {
        <small class="newFaxMessage"><span class="badge badge-warning">!</span> <b>You have a new fax.  Please click on the documents tab above to view.</b></small>
    }
</h4>

<ul class="tabs">
    <li class="tab-title">@Html.ActionLink("Reminders", "Index", "Home")</li>
    <li class="tab-title">@Html.ActionLink("Communication", "Communication", "Home")</li>
    <li class="tab-title active"><a id="contacts-tab" href="#contacts">Contacts</a></li>
    <li class="tab-title">@Html.ActionLink("Teams", "Teams", "Home")</li>
    @if (User.Identity.Name == Model.Organization.Admin)
    {
        <li class="tab-title">@Html.ActionLink("Reports", "Reports", "Home")</li>
    }
    @if (User.Identity.Name != Model.Organization.Admin)
    {
        <li class="tab-title">@Html.ActionLink("Emergency Access", "EmergencyAccess", "Home")</li>
    }
    @if (User.Identity.Name == Model.Organization.Admin || Roles.IsUserInRole("EmergencyAccess"))
    {
        <li class="tab-title">@Html.ActionLink("Patients (Admin Access)", "AdminPatients", "Home")</li>
    }
    @if (User.Identity.Name == Model.Organization.Admin || Roles.IsUserInRole("EmergencyAccess"))
    {
        <li class="tab-title">@Html.ActionLink("Audits (Admin Access)", "AdminAudits", "Home")</li>
    }
    @if (User.Identity.Name == "jesseglascock@gmail.com")
    {
        <li class="tab-title">@Html.ActionLink("Admin", "Admin", "Home")</li>
    }
</ul>

<div class="tabs-content">

    <div class="content active" id="contacts">
        <div class="row">
            <div class="small-12 columns">

                <ul class="tabs vertical" data-tab="">
                    <li class="tab-title active">
                        <a href="#personal" data-toggle="tab">Personal</a>
                    </li>
                    <li class="tab-title">
                        <a href="#organization" data-toggle="tab">Organizational</a>
                    </li>
                    @foreach (bearhug.ContactsServiceReference.Group grp in Model.Contacts.Organization.Groups)
                    {
                        if (grp.Members.Exists(g => g.UID == User.Identity.Name))
                        {
                        <li class="tab-title">
                            <a href="#@System.Text.RegularExpressions.Regex.Replace(grp.Name, @"[^\w]", "_")" data-toggle="tab">@grp.Name</a>
                        </li>
                        }
                    }
                </ul>

                <div class="tabs-content vertical">

                    <div class="content active" id="personal">
                        <h5>All Personal Contacts</h5>
                        <div class="row">
                            <div class="small-3 columns">
                                @if (Model.Contacts.ContactGroupTags.Count > 0)
                                {
                                    <a href="#" data-dropdown="drop-personal" class="button tiny radius expand dropdown">All</a><br>
                                    <ul id="drop-personal" data-dropdown-content="" class="f-dropdown">
                                        <li><a data-parent="personal" data-tag="all" data-title="All Personal Contacts" tabindex="-1" href="#personal_all">All</a></li>
                                        @foreach (string tag in Model.Contacts.ContactGroupTags)
                                        {
                                            <li><a data-parent="personal" data-tag="@System.Text.RegularExpressions.Regex.Replace(tag, @"[^\w]", "_")" data-title="@tag Contacts" tabindex="-1" href="#personal_@System.Text.RegularExpressions.Regex.Replace(tag, @"[^\w]", "_")">@tag</a></li>
                                        }
                                    </ul>
                                }
                            </div>
                            <div class="small-9 columns end">
                                <div class="row collapse">
                                    <div class="small-8 columns">
                                        <input type="text" class="contacts-search" placeholder="Search by name" autocomplete="off">
                                    </div>
                                    <div class="small-2 columns end">
                                        <button class="button tiny radius postfix contacts-search-clear" type="button">Clear</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="small-12 columns end">
                                <dl class="sub-nav">
                                    <dd><a href="#" class="btn-expand-all">Expand All</a></dd>
                                    <dd><a href="#" class="btn-collapse-all">Collapse All</a></dd>
                                </dl>
                            </div>
                        </div>

                        <div class="contact-rows">

                            <ul class="small-block-grid-1 medium-block-grid-4">
                                @for (int i = 0; i < Model.Contacts.PersonalContacts.Count; i++)
                                {
                                    string name;
                                    if (Model.Contacts.PersonalContacts[i].LastName.Length > 0 || Model.Contacts.PersonalContacts[i].FirstName.Length > 0)
                                    {
                                        name = Model.Contacts.PersonalContacts[i].LastName + ", " + Model.Contacts.PersonalContacts[i].FirstName;
                                    }
                                    else
                                    {
                                        name = Model.Contacts.PersonalContacts[i].ContactID;
                                    }
                                    List<string> taggedstrings = new List<string>();
                                    foreach (string taggedstring in Model.Contacts.PersonalContacts[i].Tags)
                                    {
                                        taggedstrings.Add(System.Text.RegularExpressions.Regex.Replace(taggedstring, @"[^\w]", "_"));
                                    }
                                    <li data-tags="@String.Join(",", taggedstrings.ToArray())" data-name="@name">
                                        <dl class="accordion" data-accordion="">
                                            <dd class="accordion-navigation">
                                                <a href="#collapse-@i"><span class="title">@name</span>
                                                    @if (Model.Contacts.PersonalContacts[i].Type == bearhug.ContactsServiceReference.Source.member)
                                                    {
                                                        <img src="~/favicon.ico" alt="Bearhug member" class="member-header-tag right" />                                                    
                                                    }
                                                </a>
                                                <div id="collapse-@i" class="content">
                                                    @Model.Contacts.PersonalContacts[i].Title, @Model.Contacts.PersonalContacts[i].Organization
                                                    <br />
                                                    @Model.Contacts.PersonalContacts[i].Email
                                                    <br />
                                                    @Model.Contacts.PersonalContacts[i].Phone
                                                    <br />
                                                    @Model.Contacts.PersonalContacts[i].Address1
                                                    @if (Model.Contacts.PersonalContacts[i].Address2 != "")
                                                    {
                                                        @Model.Contacts.PersonalContacts[i].Address2
                                                    }
                                                    <br />
                                                    @Model.Contacts.PersonalContacts[i].City, @Model.Contacts.PersonalContacts[i].State @Model.Contacts.PersonalContacts[i].Zip
                                                    <br />
                                                    @if (Model.Contacts.PersonalContacts[i].Type == bearhug.ContactsServiceReference.Source.member)
                                                    {
                                                        <button data-tooltip="" data-cid="@Model.Contacts.PersonalContacts[i].ContactID" data-name="@name" type="button" class="button tiny radius new-message has-tip" title="Message"><i class="fi-mail"></i></button>
                                                        <span class="member-tag right">
                                                            <img src="~/favicon.ico" alt="Bearhug member" />
                                                            Bearhug Member</span>                                                            
                                                    }
                                                </div>
                                            </dd>
                                        </dl>
                                    </li>
                                }
                            </ul>

                        </div>

                    </div>

                    <div class="content" id="organization">
                        <h5>All Organization Contacts</h5>
                        <div class="row">
                            <div class="small-3 columns">
                                @if (Model.Contacts.Organization.ContactGroupTags.Count > 0)
                                {
                                    <a href="#" data-dropdown="drop-organization" class="button tiny radius expand dropdown">All</a><br>
                                    <ul id="drop-organization" data-dropdown-content="" class="f-dropdown dropdown-contacts">
                                        <li><a data-parent="organization" data-tag="all" data-title="All Organization Contacts" tabindex="-1" href="#organization_all">All</a></li>
                                        @foreach (string tag in Model.Contacts.Organization.ContactGroupTags)
                                        {
                                            <li><a data-parent="organization" data-tag="@System.Text.RegularExpressions.Regex.Replace(tag, @"[^\w]", "_")" data-title="@tag Contacts" tabindex="-1" href="#organization_@System.Text.RegularExpressions.Regex.Replace(tag, @"[^\w]", "_")">@tag</a></li>
                                        }
                                    </ul>
                                }
                            </div>
                            <div class="small-7 columns end">
                                <div class="row collapse">
                                    <div class="small-10 columns">
                                        <input type="text" class="contacts-search" placeholder="Search by name" autocomplete="off">
                                    </div>
                                    <div class="small-2 columns">
                                        <button class="button tiny radius postfix" type="button">Clear</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="small-12 columns end">
                                <dl class="sub-nav">
                                    <dd><a href="#" class="btn-expand-all">Expand All</a></dd>
                                    <dd><a href="#" class="btn-collapse-all">Collapse All</a></dd>
                                </dl>
                            </div>
                        </div>

                        <div class="contact-rows">
                            <ul class="small-block-grid-1 medium-block-grid-4">
                                @for (int i = 0; i < Model.Contacts.Organization.Contacts.Count; i++)
                                {
                                    string name;
                                    if (Model.Contacts.Organization.Contacts[i].LastName.Length > 0 || Model.Contacts.Organization.Contacts[i].FirstName.Length > 0)
                                    {
                                        name = Model.Contacts.Organization.Contacts[i].LastName + ", " + Model.Contacts.Organization.Contacts[i].FirstName;
                                    }
                                    else
                                    {
                                        name = Model.Contacts.Organization.Contacts[i].ContactID;
                                    }
                                    List<string> taggedstrings = new List<string>();
                                    foreach (string taggedstring in Model.Contacts.Organization.Contacts[i].Tags)
                                    {
                                        taggedstrings.Add(System.Text.RegularExpressions.Regex.Replace(taggedstring, @"[^\w]", "_"));
                                    }
                                    <li data-tags="@String.Join(",", taggedstrings.ToArray())" data-name="@name">
                                        <dl class="accordion" data-accordion="">
                                            <dd class="accordion-navigation">
                                                <a href="#collapse-org-@i-@Model.Contacts.Organization.Id"><span class="title">@name</span>
                                                    @if (Model.Contacts.Organization.Contacts[i].Type == bearhug.ContactsServiceReference.Source.member)
                                                    {
                                                        <img src="~/favicon.ico" alt="Bearhug member" class="member-header-tag right" />                                                    
                                                    }
                                                </a>
                                                <div id="collapse-org-@i-@Model.Contacts.Organization.Id" class="content">
                                                    @Model.Contacts.Organization.Contacts[i].Title, @Model.Contacts.Organization.Contacts[i].Organization
                                                    <br />
                                                    @Model.Contacts.Organization.Contacts[i].Email
                                                    <br />
                                                    @Model.Contacts.Organization.Contacts[i].Phone
                                                    <br />
                                                    @Model.Contacts.Organization.Contacts[i].Address1
                                                    @if (Model.Contacts.Organization.Contacts[i].Address2 != "")
                                                    {
                                                        @Model.Contacts.Organization.Contacts[i].Address2
                                                    }
                                                    <br />
                                                    @Model.Contacts.Organization.Contacts[i].City, @Model.Contacts.Organization.Contacts[i].State @Model.Contacts.Organization.Contacts[i].Zip
                                                    <br />
                                                    @if (Model.Contacts.Organization.Contacts[i].Type == bearhug.ContactsServiceReference.Source.member)
                                                    {
                                                        <button data-cid="@Model.Contacts.Organization.Contacts[i].ContactID" data-name="@name" type="button" class="btn btn-mini new-message btn-tt" data-toggle="tooltip" title="Message"><i class="icon-envelope"></i></button>
                                                        <span class="member-tag">
                                                            <img src="~/favicon.ico" alt="Bearhug member" />
                                                            Bearhug Member</span>                                                            
                                                    }
                                                </div>
                                            </dd>
                                        </dl>
                                    </li>
                                }
                            </ul>
                        </div>

                    </div>

                    @foreach (bearhug.ContactsServiceReference.Group grp in Model.Contacts.Organization.Groups)
                    {
                        if (grp.Members.Exists(g => g.UID == User.Identity.Name))
                        {
                        <div class="content" id="@System.Text.RegularExpressions.Regex.Replace(grp.Name, @"[^\w]", "_")">
                            <h5>All @grp.Name Contacts</h5>
                            <div class="row">
                                <div class="small-3 columns">
                                    @if (grp.ContactGroupTags.Count > 0)
                                    {
                                        <a href="#" data-dropdown="drop-@System.Text.RegularExpressions.Regex.Replace(grp.Name, @"[^\w]", "_")" class="button tiny radius expand dropdown">All</a><br />
                                        <ul id="drop-@System.Text.RegularExpressions.Regex.Replace(grp.Name, @"[^\w]", "_")" data-dropdown-content="" class="f-dropdown dropdown-contacts">
                                            <li><a data-parent="@System.Text.RegularExpressions.Regex.Replace(grp.Name, @"[^\w]", "_")" data-tag="all" data-title="All @grp.Name Contacts" tabindex="-1" href="#group_all">All @grp.Name Contacts</a></li>
                                            @foreach (string tag in grp.ContactGroupTags)
                                            {
                                                <li><a data-parent="@System.Text.RegularExpressions.Regex.Replace(grp.Name, @"[^\w]", "_")" data-tag="@System.Text.RegularExpressions.Regex.Replace(tag, @"[^\w]", "_")" data-title="@tag Contacts" tabindex="-1" href="#group_@System.Text.RegularExpressions.Regex.Replace(tag, @"[^\w]", "_")">@tag</a></li>
                                            }
                                        </ul>
                                    }
                                </div>
                                <div class="small-7 columns end">
                                    <div class="row collapse">
                                        <div class="small-10 columns">
                                            <input type="text" class="contacts-search" placeholder="Search by name" autocomplete="off">
                                        </div>
                                        <div class="small-2 columns">
                                            <button class="button tiny radius postfix" type="button">Clear</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="small-12 columns end">
                                    <dl class="sub-nav">
                                        <dd><a href="#" class="btn-expand-all">Expand All</a></dd>
                                        <dd><a href="#" class="btn-collapse-all">Collapse All</a></dd>
                                    </dl>
                                </div>
                            </div>

                            <div class="contact-rows">
                                <ul class="small-block-grid-1 medium-block-grid-4">
                                    @for (int i = 0; i < grp.Contacts.Count; i++)
                                    {
                                        string name;
                                        if (grp.Contacts[i].LastName.Length > 0 || grp.Contacts[i].FirstName.Length > 0)
                                        {
                                            name = grp.Contacts[i].LastName + ", " + grp.Contacts[i].FirstName;
                                        }
                                        else
                                        {
                                            name = grp.Contacts[i].ContactID;
                                        }
                                        List<string> taggedstrings = new List<string>();
                                        foreach (string taggedstring in grp.Contacts[i].Tags)
                                        {
                                            taggedstrings.Add(System.Text.RegularExpressions.Regex.Replace(taggedstring, @"[^\w]", "_"));
                                        }
                                        <li data-tags="@String.Join(",", taggedstrings.ToArray())" data-name="@name">
                                            <dl class="accordion" data-accordion="">
                                                <dd class="accordion-navigation">
                                                    <a href="#collapse-@i-@grp.Id"><span class="title">@name</span>
                                                        @if (grp.Contacts[i].Type == bearhug.ContactsServiceReference.Source.member)
                                                        {
                                                            <img src="~/favicon.ico" alt="Bearhug member" class="member-header-tag right" />                                                    
                                                        }
                                                    </a>
                                                    <div id="collapse-@i-@grp.Id" class="content">
                                                        @grp.Contacts[i].Title, @grp.Contacts[i].Organization
                                                        <br />
                                                        @grp.Contacts[i].Email
                                                        <br />
                                                        @grp.Contacts[i].Phone
                                                        <br />
                                                        @grp.Contacts[i].Address1
                                                        @if (grp.Contacts[i].Address2 != "")
                                                        {
                                                            @grp.Contacts[i].Address2
                                                        }
                                                        <br />
                                                        @grp.Contacts[i].City, @grp.Contacts[i].State @grp.Contacts[i].Zip
                                                        <br />
                                                        @if (grp.Contacts[i].Type == bearhug.ContactsServiceReference.Source.member)
                                                        {
                                                            <button data-cid="@grp.Contacts[i].ContactID" data-name="@name" type="button" class="btn btn-mini new-message btn-tt" data-toggle="tooltip" title="Message"><i class="icon-envelope"></i></button>
                                                            <span class="member-tag">
                                                                <img src="~/favicon.ico" alt="Bearhug member" />
                                                                Bearhug Member</span>                                                            
                                                        }
                                                    </div>
                                                </dd>
                                            </dl>
                                        </li>
                                    }
                                </ul>
                            </div>

                        </div>
                        }
                    }

                </div>

            </div>

            <div class="content" id="groups">
            </div>

        </div>

    </div>

</div>

<div id="new-message-modal" class="reveal-modal medium" data-reveal="">
    <a class="close-reveal-modal">&#215;</a>
    <div class="row">
        <div class="small-12 columns">
            <h5>New Message</h5>
        </div>
    </div>
    @using (Html.BeginForm("New", "Messaging", FormMethod.Post, new { @id = "new-message-form", @class = "form-horizontal", @enctype = "multipart/form-data" }))
    {
        <div class="new-message-container">
            <div class="row">
                <div class="small-2 columns">
                    <label class="right inline" for="new_message_to_emails">To</label>
                </div>
                <div class="small-9 columns end">
                    <select multiple="multiple" name="new_message_to_emails" id="new_message_to_emails" tabindex="-1" style="width: 100%;">                        
                    </select>
                </div>
            </div>
            <div class="row">
                <div class="small-2 columns">
                    <label class="right inline" for="new_message_subject">Subject</label>
                </div>
                <div class="small-9 columns end">
                    <input id="new_message_subject" name="new_message_subject" type="text" autocomplete="off" />
                </div>
            </div>
            <div class="row">
                <div class="small-2 columns">
                    <label class="right inline" for="new_message_file">Files</label>
                </div>
                <div class="small-9 columns end">
                    <div class="row collapse">
                        <div class="small-10 columns">
                            <input id="new_message_files_text" name="new_message_files_text" placeholder="(optional)" disabled="disabled" type="text" />
                        </div>
                        <div class="small-2 columns">
                            <div class="fileUpload button radius postfix">
                                <span>Upload</span>
                                <input id="new_message_files" name="new_message_files" type="file" multiple="multiple" />
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="small-2 columns">
                    <label class="right inline" for="new_message_body">Message</label>
                </div>
                <div class="small-9 columns end">
                    <textarea id="new_message_body" name="new_message_body"></textarea>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="small-2 columns">
                &nbsp;
            </div>
            <div class="small-1 columns">
                <button id="cancel-new-message" class="button tiny radius secondary" type="button">Cancel</button>
            </div>
            <div class="small-8 columns end">
                <button class="button tiny radius right" type="submit">Send</button>
            </div>
        </div>
    }
</div>

<script src="~/Scripts/select2/select2.js" type="text/javascript"></script>
<script>
    $(function () {

        $('.btn-expand-all').click(function (e) {
            e.preventDefault();
            $(this).parents().eq(3).next('.contact-rows').find('.accordion-navigation').addClass('active');
            $(this).parents().eq(3).next('.contact-rows').find('.content').addClass('active');
        });

        $('.btn-collapse-all').click(function (e) {
            e.preventDefault();
            $(this).parents().eq(3).next('.contact-rows').find('.accordion-navigation').removeClass('active');
            $(this).parents().eq(3).next('.contact-rows').find('.accordion-navigation').find('.content').removeClass('active');
        });

        $('.f-dropdown li a').click(function (e) {
            e.preventDefault();
            $(this).parents().eq(2).next().find('.contacts-search').val('');
            var tag = $(this).data('tag');
            $(this).parents().eq(1).prevAll('a').text($(this).text());
            if (tag == 'all') {
                $(this).parents().eq(3).nextAll('.contact-rows').find('li').show();
            }
            else {
                $(this).parents().eq(3).nextAll('.contact-rows').find('li').each(function (i, li) {
                    var tags = $(li).data('tags').split(",");
                    if (tags.indexOf(tag) == -1) {
                        $(li).hide();
                    }
                    else {
                        $(li).show();
                    }
                });
            }
            Foundation.libs.dropdown.close($('#' + $(this).parents().eq(1).attr('id')));
        });

        $('.contacts-search').keyup(function (e) {
            e.preventDefault();
            $(this).parents().eq(2).prev().find('.dropdown').text('All');
            var txt = $(this).val();
            var items = $(this).parents().eq(3).nextAll('.contact-rows').find('li');
            $(items).each(function (i, li) {
                if (String($(li).data('name')).toLowerCase().indexOf(txt.toLowerCase()) == -1) {
                    $(li).hide();
                }
                else {
                    $(li).show();
                }
            });
        });

        $('.contacts-search-clear').click(function (e) {
            e.preventDefault();
            $(this).parent().prev().find('.contacts-search').val('');
            var items = $(this).parents().eq(3).nextAll('.contact-rows').find('li').show();
        });

        $('.new-message').click(function (e) {
            var cid = $(this).data('cid');
            var name = $(this).data('name');
            //$("#new_message_to_emails").select2({
            //    data: [{ id: cid, text: name }]
            //});
            $("#new_message_to_emails").append('<option value="' + cid + '" selected="selected" locked="locked">' + name + '</option>').select2();
            $('#new-message-modal').foundation('reveal', 'open');
        });

        $("#new_message_to_emails").select2();

        document.getElementById("new_message_files").onchange = function () {
            if (this.files.length > 1) {
                document.getElementById("new_message_files_text").value = this.files.length + " files";
            }
            else {
                document.getElementById("new_message_files_text").value = this.files[0].name;
            }
        };

        $('#cancel-new-message').click(function (e) {
            $('#new-message-modal').foundation('reveal', 'close');
        });

        $(document).on('close', '#new-message-modal', function (e) {
            $('#new-message-form')[0].reset();
            $('#new_message_to_emails').select2("val", "");
        });
    });
</script>

@model bearhug.MessagingServiceReference.MessageGroup
@{
    ViewBag.Title = "Message";
}

<link href="~/Content/select2/select2.css" rel="stylesheet" />
@{Html.RenderAction("_MessagingContactsPartial", "Messaging");}
<div class="list-container">
    <div class="row list-section-subject-header-anchor"></div>
    <div class="row list-section-subject-header">
        <div class="small-11 columns">
            <h4 class="subheader">@Model.Subject</h4>
        </div>
        <div class="small-1 columns">
            <a class="right" href="@Url.Action("Index", "Messaging")"><i data-tooltip="" aria-haspopup="true" title="Close" class="fi-x has-tip tip-left"></i></a>
        </div>
    </div>
    <div class="list-container-scroller">
        <div class="reply-message-container list-section">
            @using (Html.BeginForm("Reply", "Messaging", FormMethod.Post, new { @id = "reply-message-form", @class = "form-horizontal", @enctype = "multipart/form-data" }))
            {
                <div class="row">
                    <div class="small-9 columns small-centered">
                        <fieldset>
                            <legend>Reply</legend>
                            <input id="reply_hidden_mid" name="reply_hidden_mid" type="hidden" value="@Model.MessageId">
                            <div class="row">
                                <div class="small-2 columns">
                                    <label class="right inline" for="reply_message_to_emails">To</label>
                                </div>
                                <div class="small-7 columns end">
                                    <select multiple="multiple" name="reply_message_to_emails" id="reply_message_to_emails" tabindex="-1" style="width: 100%;">
                                    </select>
                                </div>
                            </div>
                            <div class="row">
                                <div class="small-2 columns">
                                    <label class="right inline" for="reply_message_subject">Subject</label>
                                </div>
                                <div class="small-7 columns end">
                                    <input id="reply_message_subject" name="reply_message_subject" type="text" value="@Model.Subject" readonly="readonly" />
                                </div>
                            </div>
                            <div class="row">
                                <div class="small-2 columns">
                                    <label class="right inline" for="reply_message_file">Files (optional)</label>
                                </div>
                                <div class="small-7 columns end">
                                    <div class="row collapse">
                                        <div class="small-10 columns">
                                            <input id="reply_message_files_text" name="reply_message_files_text" placeholder="(optional)" disabled="disabled" type="text" />
                                        </div>
                                        <div class="small-2 columns">
                                            <div class="fileUpload button radius postfix">
                                                <span>Upload</span>
                                                <input id="reply_message_files" name="reply_message_files" type="file" multiple="multiple" />
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="small-2 columns">
                                    <label class="right inline" for="reply_message_body">Body</label>
                                </div>
                                <div class="small-7 columns end">
                                    <textarea id="reply_message_body" name="reply_message_body"></textarea>
                                </div>
                            </div>
                            <div class="row">
                                <div class="small-2 columns">
                                    &nbsp;
                                </div>
                                <div class="small-1 columns">
                                    <button id="close-reply-message" class="button tiny radius secondary" type="button">Cancel</button>
                                </div>
                                <div class="small-6 columns end">
                                    <button class="button tiny radius right" type="submit">Send</button>
                                </div>
                            </div>
                        </fieldset>
                    </div>
                </div>                                
            }
        </div>
        @foreach (bearhug.MessagingServiceReference.Message msg in Model.Messages)
        {    
            <div class="list-section">
                <div class="row snippet">
                    <div class="small-3 columns">
                        <label>@msg.From</label>
                    </div>
                    <div class="small-5 columns">
                        <label class="subtext">@msg.MessageText</label>
                    </div>                    
                    <div class="small-3 columns">
                        <label class="subtext right">@(msg.DateTimeStamp.Date == DateTime.Today.Date ? msg.DateTimeStamp.ToShortTimeString() : msg.DateTimeStamp.ToShortDateString())</label>
                    </div>
                    <div class="small-1 columns">
                        @if (msg.Documents.Count > 0)
                        {
                            <img src="~/Images/paperclip.png" alt="Attachment" height="20" width="20" class="right" />
                        }
                        else
                        {
                            <span>&nbsp;</span>
                        }
                    </div>
                </div>
                <div class="row full">
                    <div class="small-12 columns">
                        <div class="row">
                            <div class="small-12 columns full-header">
                                <label>From: @msg.From</label>
                                <label>To: @String.Join(", ", msg.To)</label>
                            </div>
                        </div>
                        <div class="row">
                            <div class="small-12 columns">
                                <br />
                            </div>
                        </div>
                        <div class="row msg-body">
                            <div class="small-12 columns">
                                @if (msg.MessageText.Length == 0)
                                {
                                    <label class="msg-text"><i>No message provided</i></label>
                                }
                                else
                                {
                                    <label>@MvcHtmlString.Create(Html.Encode(msg.MessageText).Replace(Environment.NewLine, "<br />"))</label>
                                }
                            </div>
                        </div>
                        <div class="row">
                            <div class="small-12 columns">
                                <hr />
                            </div>
                        </div>
                        <div class="row list-actions">
                            <div class="small-2 columns">
                                <button data-dropdown="action-@msg.Id" aria-controls="drop1" aria-expanded="false" class="button tiny radius dropdown">Action</button><br>
                                <ul id="action-@msg.Id" data-dropdown-content="" class="f-dropdown" aria-hidden="true" tabindex="-1">
                                    <li><a href="#" class="reply-opened-message" data-id="@msg.Id" data-mid="@msg.MessageId" data-from="@msg.From" data-from-name="@msg.FromName">Reply</a></li>
                                    @{List<string> tos = msg.To; tos.Remove(msg.From); string replyallcids = msg.From + ";" + String.Join(";", tos);}
                                    <li><a href="#" class="reply-all-opened-message" data-id="@msg.Id" data-mid="@msg.MessageId" data-from="@replyallcids" data-from-name="@msg.FromName">Reply All</a></li>
                                    <li><a href="#" class="delete-opened-message" data-id="@msg.Id" data-mid="@msg.MessageId" data-from="@msg.From" data-from-name="@msg.FromName">Delete</a></li>
                                </ul>

                            </div>
                            <div class="small-4 columns list-confirm-delete">
                                @using (Html.BeginForm("DeleteSingle", "Messaging"))
                                {
                                    <div class="row">
                                        <div class="small-4 columns">
                                            <label class="confirm-delete-message left inline">Are you sure?</label>
                                        </div>
                                        <div class="small-8 columns">
                                            <button class="button tiny radius confirm-delete-no" type="button" data-id="@msg.Id" data-mid="@msg.MessageId" data-from="@msg.From">No</button>
                                            <button class="button tiny radius alert confirm-delete-yes" type="submit" data-id="@msg.Id" data-mid="@msg.MessageId" data-from="@msg.From">Yes</button>                
                                        </div>
                                    </div>
                                    <input name="confirm_delete_id" type="hidden" value="@msg.Id">
                                    <input name="confirm_delete_mid" type="hidden" value="@msg.MessageId">
                                }
                            </div>
                            <div class="small-6 columns ">
                                @if (msg.Documents.Count > 0)
                                {
                                    foreach (bearhug.MessagingServiceReference.MessageDocument msgDocument in msg.Documents)
                                    {
                                    <a href="@Url.Action("getDocument", "Messaging", new { @mid = Model.MessageId, @id = msg.Id, @docid = msgDocument.Id })" class="right" target="_blank">
                                        <label class="download-label">@msgDocument.DocumentName</label></a>
                                    }
                                }
                            </div>
                        </div>
                    </div>
                </div>

            </div>
        }
    </div>
</div>

<script src="~/Scripts/select2/select2.js" type="text/javascript"></script>
<script>
    $(function () {

        $('.top-bar-section ul li').removeClass('active');
        $('#li-messages').addClass('active');
        var replies = [];
        $("#reply_message_to_emails").select2();

        document.getElementById("reply_message_files").onchange = function () {
            if (this.files.length > 1) {
                document.getElementById("reply_message_files_text").value = this.files.length + " files";
            }
            if (this.files.length == 1) {
                document.getElementById("reply_message_files_text").value = this.files[0].name;
            }
            if (this.files.length == 0) {
                document.getElementById("new_message_files_text").value = "";
            }
        };

        $("#messaging_contacts > option").each(function () {
            replies.push({
                txt: $(this).text(),
                val: $(this).val(),
                isTeam: $(this).hasClass('messaging-team')
            });            
        });

        $('.reply-opened-message').each(function () {
            var newR = {
                txt: $(this).data('from-name'),
                val: $(this).data('from')
            }
            if (myIndexOf(replies, newR) == -1) {
                replies.push(newR);
            }
        });

        $(replies).each(function (idx, reply) {
            var option = $("<option></option>");
            $(option).attr("value", reply.val).text(reply.txt);
            if (reply.isTeam) {
                $(option).addClass('messaging-team');
            }
            $('#reply_message_to_emails').append($(option));
        });

        $('.reply-opened-message').click(function (e) {
            e.preventDefault();
            $bodyWrapper.scrollTop(0);
            var d = $(this).data('from');            
            $('.reply-message-container').slideDown('slow');
            $('#reply_message_to_emails').select2('val', [d]);
            Foundation.libs.dropdown.close($(this).parents().eq(1));
        });

        $('.reply-all-opened-message').click(function (e) {
            e.preventDefault();
            $bodyWrapper.scrollTop(0);
            var d = $(this).data('from').split(";");
            $('.reply-message-container').slideDown('slow');
            $('#reply_message_to_emails').select2('val', d);
            Foundation.libs.dropdown.close($(this).parents().eq(1));
        });

        $('#close-reply-message').click(function (e) {
            e.preventDefault();
            $('.reply-message-container').slideUp('slow', function () {
                $('#reply-message-form')[0].reset();
                $('#reply_message_to_emails').select2("val", "");
            });            
        });

        $('.delete-opened-message').click(function (e) {
            e.preventDefault();
            var dropdown = $(this).parents().eq(1);            
            Foundation.libs.dropdown.close($(dropdown));
            $(dropdown).parents().eq(1).find('.dropdown').attr('disabled', 'disabled');
            $(dropdown).parents().eq(1).find('.list-confirm-delete').show();
        });

        $('.confirm-delete-no').click(function (e) {
            e.preventDefault();
            var parent = $(this).parents().eq(3);
            $(parent).hide();
            $(parent).parent().find('.dropdown').removeAttr('disabled');
        });

        $('.snippet').click(listSectionClick);
        $('.full-header').click(listSectionClick);

        function listSectionClick(e) {
            if ($(this).hasClass('full-header')) {
                $(this).parents().eq(3).find('.snippet').toggle();
                $(this).parents().eq(2).toggle();
            }
            else {
                $(this).parent().find('.snippet').toggle();
                $(this).parent().find('.full').toggle();
            }
        }

        var $bodyWrapper = $('.body-wrapper'),
            $listSectionHeader = $('.list-section-subject-header'),
            $listSectionHeaderAnchor = $('.list-section-subject-header-anchor');

        $bodyWrapper.scroll(function () {
            var window_top = $bodyWrapper.scrollTop();
            var div_top = $listSectionHeaderAnchor.offset().top;
            var header_width = $listSectionHeader.width();
            if (window_top > div_top) {
                // Make the div sticky.
                $listSectionHeader.addClass('sticky');
                $listSectionHeader.width(header_width);
                $listSectionHeaderAnchor.height($listSectionHeader.height());
            }
            else {
                // Unstick the div.
                $listSectionHeader.removeClass('sticky');
                $listSectionHeaderAnchor.height(0);
            }
        });

    });

    function myIndexOf(myArray, myObject) {
        for (var i = 0; i < myArray.length; i++) {
            if (myArray[i].val == myObject.val) {
                return i;
            }
        }
        return -1;
    }
</script>
